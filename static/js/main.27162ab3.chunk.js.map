{"version":3,"sources":["logo.svg","component/Statistics.js","component/feedback.js","App.js","reportWebVitals.js","index.js"],"names":["Statistics","good","neutral","bad","total","feedback","Feedback","useState","setGood","setNeutral","setBad","setTotal","setFeedBack","type","className","onClick","prevState","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAAe,I,YCAA,SAASA,EAAT,GAAwD,IAAlCC,EAAiC,EAAjCA,KAAKC,EAA4B,EAA5BA,QAAQC,EAAoB,EAApBA,IAAIC,EAAgB,EAAhBA,MAAMC,EAAU,EAAVA,SACxD,OACI,gCACA,8FACA,qDAAuB,+BAAOJ,OAC9B,qDAAuB,+BAAOC,OAC9B,qDAAuB,+BAAOC,OAC9B,qDAAuB,+BAAOC,OAC9B,qDAAuB,iCAAOC,EAAP,cCJhB,SAASC,IAAY,IAAD,EACXC,mBAAS,GADE,mBAC1BN,EAD0B,KACpBO,EADoB,OAELD,mBAAS,GAFJ,mBAE1BL,EAF0B,KAEjBO,EAFiB,OAGbF,mBAAS,GAHI,mBAG1BJ,EAH0B,KAGrBO,EAHqB,OAITH,mBAAS,GAJA,mBAI1BH,EAJ0B,KAInBO,EAJmB,OAKFJ,mBAAS,GALP,mBAKzBF,EALyB,KAKfO,EALe,KA4BhC,OACM,gCACI,uHACA,wBAAQC,KAAK,SAASC,UAAU,SAASC,QAvB9B,WACnBP,GAAQ,SAAAQ,GAAS,OAAIA,EAAY,KACjCL,GAAS,SAAAK,GAAS,OAAIA,EAAY,KAClCJ,EAAaX,EAAKG,EAAO,MAoBjB,kBACA,wBAAQS,KAAK,SAASC,UAAU,SAASC,QAhB1B,WACrBN,GAAW,SAAAO,GAAS,OAAIA,EAAY,KACtCL,GAAS,SAAAK,GAAS,OAAIA,EAAY,KAClCJ,EAAaX,EAAKG,EAAO,MAajB,sBACA,wBAAQS,KAAK,SAASC,UAAU,SAASC,QAX/B,WACfL,GAAO,SAAAM,GAAS,OAAIA,EAAY,KACnCL,GAAS,SAAAK,GAAS,OAAIA,EAAY,KAClCJ,EAAaX,EAAKG,EAAO,MAQjB,iBACM,GAAPA,EACA,cAACJ,EAAD,CACCC,KAAQA,EACRC,QAAWA,EACXC,IAAOA,EACPC,MAASA,EACTC,SAAYA,IACT,mH,MCnCDY,MANf,WACE,OACE,cAACX,EAAD,KCMWY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.27162ab3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default function Statistics({ good,neutral,bad,total,feedback}){\r\n    return(  \r\n        <div>\r\n        <h2>Статистика</h2>\r\n        <p>Good:               <span>{good}</span></p>\r\n        <p>Neutral:            <span>{neutral}</span></p>\r\n        <p>Bad:                <span>{bad}</span></p>\r\n        <p>Total:              <span>{total}</span></p>\r\n        <p>Positiv feedback    <span>{feedback} %</span></p>\r\n        </div>\r\n                );\r\n}","import { useState, useEffect } from 'react';\r\nimport './feedback.moduls.css';\r\nimport Statistics from './Statistics';\r\n\r\nexport default function Feedback (){\r\n  const [good, setGood]=useState(0);\r\n  const [neutral, setNeutral]=useState(0);\r\n  const [bad, setBad]=useState(0);\r\n  const [total, setTotal]=useState(0);\r\n  const [ feedback, setFeedBack]=useState(0);\r\n    \r\n\r\n   const  hendeleGood = () => {\r\n     setGood(prevState => prevState + 1);\r\n     setTotal(prevState => prevState + 1);\r\n     setFeedBack((good/total)*100);\r\n    \r\n             \r\n      }\r\n\r\n   const   hendeleNeutral = ()  => {\r\n       setNeutral(prevState => prevState + 1);\r\n     setTotal(prevState => prevState + 1);\r\n     setFeedBack((good/total)*100);\r\n      }      \r\n\r\n   const  hendeleBad = () => {\r\n        setBad(prevState => prevState + 1);\r\n     setTotal(prevState => prevState + 1);\r\n     setFeedBack((good/total)*100);\r\n      }\r\n\r\n   return(\r\n         <div>\r\n             <h2>Отзывы клиентов</h2>\r\n             <button type=\"button\" className=\"button\" onClick={hendeleGood}>Good</button>\r\n             <button type=\"button\" className=\"button\" onClick={hendeleNeutral}> Neutral</button>\r\n             <button type=\"button\" className=\"button\" onClick={hendeleBad}>Bad</button>\r\n           {total!=0? \r\n            <Statistics \r\n             good = {good}\r\n             neutral = {neutral}\r\n             bad = {bad}\r\n             total = {total}\r\n             feedback = {feedback}\r\n             />:<p>Нет статистики</p>}\r\n         </div> \r\n        \r\n         \r\n\r\n     )   \r\n    \r\n}\r\n\r\n","import logo from './logo.svg';\nimport Feedback from './component/feedback'\nimport './App.css';\n\nfunction App() {\n  return (\n    <Feedback />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}